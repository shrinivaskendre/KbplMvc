@model KbplMvc.Models.Materialissueslip

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
                    //WebGrid grid = new WebGrid();
}

<script src="~/Scripts/Bootstrap/js/bootstrap.js"></script>
<script src="~/Scripts/Bootstrap/js/bootstrap.min.js"></script>
<link href="~/Scripts/Bootstrap/css/bootstrap.css" rel="stylesheet" />
<link href="~/Scripts/Bootstrap/css/bootstrap.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.7.1.min.js"></script>
<h2 style="text-align: center">Material Issue Slip</h2>

<div style="padding: 11px"></div>

<style type="text/css">
    .spacediv {
        height: 10px;
    }

    li {
        color: red;
    }

    .gapdiv {
        padding: 10px;
    }
</style>

<script type="text/javascript">

    $(document).ready(function () {
        $("#Factory").change(function () {

            debugger;

            $("#PlantypeID").empty();
            // BindTable();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("BindCostCenter")',
                dataType: 'json',
                data: { schemeid: $("#Factory").val() },
                success: function (plandata) {

                    $("#PlantypeID").append('<option value="' + "0" + '">' + "Select" + '</option>');

                    $("#PlantypeID")
                    .append('<option><ul><li>Code</li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<li>Cost Name</li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<li>cost Rate</li></ul></option>');

                    $.each(plandata, function (i, plan) {
                        $("#PlantypeID").append('<option value="' + plan.Value + '">' + plan.Text + '&nbsp;&nbsp;&nbsp;' + "123" + ' </option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })

        $("#PlantypeID").change(function () {
            $("#ItemDetails").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("BindItemDetails")',
                dataType: 'json',
                data: { schemeid: $("#PlantypeID").val() },
                success: function (plandata) {

                    $("#ItemDetails").append('<option value="' + "0" + '">' + "Select" + '</option>');

                    $("#ItemDetails")
                    .append('<option><ul><li>Code</li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<li>Cost Name</li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<li>cost Rate</li></ul></option>');

                    $.each(plandata, function (i, plan) {
                        $("#ItemDetails").append('<option value="' + plan.Value + '">' + plan.Text + '&nbsp;&nbsp;&nbsp;' + "123" + ' </option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })


        function BindTable() {
            debugger;
            $("#tblEmployeetbodytr").remove();
            $.ajax
            ({
                type: 'POST',
                url: '@Url.Action("BindInitialData")',
                dataType: 'json',
                data: {},
                success: function (data) {
                    $("#imgLoading").hide();
                    var items = '';
                    var rows = "<tr>" +
                        "<th align='left' class='EmployeeTableTH'>Item</th><th align='left' class='EmployeeTableTH'>Item Code</th><th align='left' class='EmployeeTableTH'>Unit</th><th align='left' class='EmployeeTableTH'>Manager Name</th><th align='left' class='EmployeeTableTH'>City</th>" +
                        "</tr>";
                    $('#tblEmployeetbody').append(rows);

                    $.each(data, function (i, item) {
                        var rows = "<tr>" +
                            "<td class='EmployeeTableTD'>" + @Html.DropDownList("ItemDetails", new SelectList(string.Empty, "itemCode", "itemDesc"), new { style = "width: 150px; height: 27px;" }) + "</td>" +
                             "<td class='EmployeeTableTD'>" +  @Html.TextBoxFor(m => m.itemCode) + "</td>" +
                             "<td class='EmployeeTableTD'>" + @Html.TextBoxFor(m => m.unit) + "</td>" +
                             "<td class='EmployeeTableTD'>" +  @Html.TextBoxFor(m => m.availQty) + "</td>" +
                             "<td class='EmployeeTableTD'>" +  @Html.TextBoxFor(m => m.issueQty) + "</td>" +
                             "<td class='EmployeeTableTD'>" +   @Html.TextBoxFor(m => m.issuePurpose) + "</td>" +
                             "</tr>";
                         $('#tblEmployeetbody').append(rows);
                     });
                 },
                error: function (ex) {
                    var r = jQuery.parseJSON(response.responseText);
                    alert("Message: " + r.Message);
                }
            });
             return false;
         }

    });

</script>

@using (Html.BeginForm())
{
      
    @Html.ValidationSummary(true)
     
    <div class="container">
       @* @if (ViewBag.userdetails == null)
        {
            *@<div class="row">
                <div class="col-md-1">
                    * Issue No
                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.IssueNo)
                    @Html.ValidationMessageFor(model => model.IssueNo)
                </div>
                <div class="col-md-2"></div>
                <div class="col-md-2">
                    * Issue Date
                </div>
                <div class="col-md-3" style="margin-left: -96px">
                    @Html.EditorFor(model => model.IssueDate)
                    @Html.ValidationMessageFor(model => model.IssueDate)
                </div>
            </div>

            <div class="spacediv"></div>

            <div class="row">
                <div class="col-md-1">
                    * Factory
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.Factory, Model.ListFactory, new { style = "width: 300px; height: 27px;" })
                    @Html.ValidationMessageFor(model => model.Factory)
                </div>
                <div class="col-md-2"></div>
                <div class="col-md-2">
                    * Person Name 
                </div>
                <div class="col-md-3" style="margin-left: -96px">
                    @Html.EditorFor(model => model.PersonName)
                    @Html.ValidationMessageFor(model => model.PersonName)
                </div>
            </div>
            <div class="spacediv"></div>
            <div class="row">
                <div class="col-md-2">
                    * Cost Center
                </div>
                <div class="col-md-3" style="margin-left: -96px">
                    @*@Html.DropDownListFor(model => model.costcenter, Model.ListCostCenter, new { style = "width: 300px; height: 27px;" })*@
                    @Html.DropDownList("PlantypeID", new SelectList(string.Empty, "Value", "Text", "123"), new { style = "width: 300px; height: 27px;" })
                    @Html.ValidationMessageFor(model => model.costcenter)
                </div>
                <div class="col-md-1"></div>
                <div class="col-md-1">
                </div>
                <div class="col-md-3">
                </div>
            </div>
            <div class="spacediv"></div>
            <div class="row">
                <div class="col-md-1">
                    * Remark
                </div>
                <div class="col-md-9" style="width: 900px">
                    @Html.EditorFor(model => model.Remark)
                    @Html.ValidationMessageFor(model => model.Remark)
                </div>
            </div>
            @*
        }

        else
        {
            <h2>Show Item List Details</h2>  
            <div>
                <table id="t01">
                    <thead>
                        <th>Item</th>
                        <th>Item Code</th>
                        <th>Unit</th>
                        <th>Avail Qty</th>
                        <th>Issue Qty</th>
                        <th>Issue Purpose</th>
                    </thead>
                    @foreach (var item in ViewBag.userdetails)
                    {  
                        <tr>
                            <td>
                                @Html.DropDownList("ItemDetails", new SelectList(string.Empty, "itemCode", "itemDesc"), new { style = "width: 150px; height: 27px;" })
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.itemCode)
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.unit)
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.availQty)
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.issueQty)
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.issuePurpose)
                            </td>
                            <td></td>
                        </tr>  
  
                    }

                </table>
            </div>  
            <style>
                table#t01 {
                    width: 77px;
                    background-color: #f1f1c1;
                }

                    table#t01 tr:nth-child(even) {
                        background-color: #eee;
                    }

                    table#t01 tr:nth-child(odd) {
                        background-color: #fff;
                    }

                    table#t01 th {
                        color: white;
                        background-color: blue;
                    }

                table, th, td {
                    border: 1px solid black;
                }

                table, th, td {
                    border: 1px solid black;
                    border-collapse: collapse;
                }

                table, th, td {
                    border: 1px solid black;
                    border-collapse: collapse;
                }

                th, td {
                    padding: 15px;
                }
            </style> 
    
        }*@
            
            
    <h1>  
    Showing ITem Data....
    </h1>  
    <div>  
    <table tableid = "tblEmployee" class = "tblEmployee">  
      
    <thead>  
    @*<img src = "~/Loading.gif" alt ="Loading"  id="imgLoading"  class="Load"/>  *@
    </thead>
        <tbody> </tbody>   
    </table>   
    </div>  
   @* <script src = "~/Scripts/jquery-1.10.2.min.js"> </script>  *@
     @*<script type = "text/javascript" >
         $(document).ready(function () {
             $("#tblEmployeetbodytr").remove();
             $.ajax
             ({
                 type: 'POST',
                 url: '@Url.Action("BindInitialData")',
                 dataType: 'json',
                 data: {},
                 success: function (data) {
                     $("#imgLoading").hide();
                     var items = '';
                     var rows = "<tr>" +
                         "<th align='left' class='EmployeeTableTH'>Item</th><th align='left' class='EmployeeTableTH'>Item Code</th><th align='left' class='EmployeeTableTH'>Unit</th><th align='left' class='EmployeeTableTH'>Manager Name</th><th align='left' class='EmployeeTableTH'>City</th>" +
                         "</tr>";
                     $('#tblEmployeetbody').append(rows);

                     $.each(data, function (i, item) {
                         var rows = "<tr>" +
                             "<td class='EmployeeTableTD'>" + @Html.DropDownList("ItemDetails", new SelectList(string.Empty, "itemCode", "itemDesc"), new { style = "width: 150px; height: 27px;" }) + "</td>" +
                             "<td class='EmployeeTableTD'>" +  @Html.TextBoxFor(m => m.itemCode) + "</td>" +
                             "<td class='EmployeeTableTD'>" + @Html.TextBoxFor(m => m.unit) + "</td>" +
                             "<td class='EmployeeTableTD'>" +  @Html.TextBoxFor(m => m.availQty) + "</td>" +
                             "<td class='EmployeeTableTD'>" +  @Html.TextBoxFor(m => m.issueQty) + "</td>" +
                             "<td class='EmployeeTableTD'>" +   @Html.TextBoxFor(m => m.issuePurpose) + "</td>" +
                             "</tr>";
                         $('#tblEmployeetbody').append(rows);
                     });
                 },
                 error: function (ex) {
                     var r = jQuery.parseJSON(response.responseText);
                     alert("Message: " + r.Message);
                 }
             });
             return false;
         });
</script>*@  
 <style type= "text/css">
     .tblEmployee {
         font-family: verdana, arial, sans-serif;
         font-size: 11px;
         color: #333333;
         border-width: 1px;
         border-color: #666666;
         border-collapse: collapse;
     }

     .EmployeeTableTH {
         border-width: 1px;
         padding: 8px;
         border-style: solid;
         border-color: #666666;
         background-color: #dedede;
     }

     .EmployeeTableTD {
         border-width: 1px;
         padding: 8px;
         border-style: solid;
         border-color: #666666;
         background-color: #ffffff;
     }
 </style>  

    </div> 
      
     
    
    
    
    
    
    
    
    
@*
    <div style="width: 100%;">
        @{
    WebGrid grid = new WebGrid(Model);
            @grid.GetHtml(
         tableStyle: "grid",
         fillEmptyRows: false,
         headerStyle: "gvHeading",
         alternatingRowStyle: "gvAlternateRow",
         rowStyle: "gvRow",
         footerStyle: "gvFooter",

         mode: WebGridPagerModes.All,
         firstText: "<< First",
         previousText: "< Prev",
         nextText: "Next >",
         lastText: "Last >>",
         columns: new[] {
         grid.Column(format: @<text><input type="checkbox" name="ProductId" class="checkBox" value="@item.ProductId" /></text>, header: "Select"),
         grid.Column("ProductId",header: "ProductId"),
         grid.Column("name",header: "name"),
         grid.Column("address"),
         grid.Column("salary"),     
         grid.Column("dept", header: "Deparment"),
         //grid.Column("ContactusId", header: "Action", canSort:false
         grid.Column("", header: "Action",
         format: @<text>
            @Html.Raw("<button type='edit' title='Edit' onclick='EditProduct("+ item.ProductId  +")'/>")
            @Html.Raw("<button type='delete' title='Delete' onclick='DeleteProduct("+ item.ProductId +")'/>")
            </text>
    )       
     })    
        }
    </div>*@



@*<fieldset>
    <legend>Materialissueslip</legend>

    <div class="editor-label">
        @Html.LabelFor(model => model.IssueNo)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.IssueNo)
            @Html.ValidationMessageFor(model => model.IssueNo)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.IssueDate)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.IssueDate)
            @Html.ValidationMessageFor(model => model.IssueDate)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.PersonName)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.PersonName)
            @Html.ValidationMessageFor(model => model.PersonName)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Factory)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.Factory, Model.ListFactory, new { style = "width: 170px; height: 27px;" })
            @Html.ValidationMessageFor(model => model.Factory)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.costcenter)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.costcenter)
            @Html.ValidationMessageFor(model => model.costcenter)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Remark)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Remark)
            @Html.ValidationMessageFor(model => model.Remark)
    </div>

    <p>
        <input type="submit" value="Create" />
    </p>
</fieldset>
*@
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>
*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}